#include "avr/io.h"
#include <util/delay.h>
#include <avr/pgmspace.h>
#include "LCD_pc8812.h"
#include <avr/interrupt.h>
#include "sled.h"
#include "MicroMenu.h"
//Массив символов

const  unsigned char tahoma8_ui[] PROGMEM=
{

0x20, /* First character */
0xE0, /* Number of characters in font */

/* Character widths */
0x05, 0x03, 0x04, 0x07, 0x06, 0x08, 0x07, 0x02,
0x03, 0x03, 0x04, 0x06, 0x03, 0x04, 0x02, 0x05,
0x06, 0x04, 0x06, 0x05, 0x06, 0x05, 0x06, 0x06,
0x06, 0x06, 0x02, 0x02, 0x04, 0x05, 0x04, 0x05,
0x08, 0x06, 0x05, 0x06, 0x06, 0x05, 0x04, 0x07,
0x06, 0x04, 0x04, 0x05, 0x04, 0x08, 0x06, 0x08,
0x05, 0x08, 0x05, 0x05, 0x06, 0x06, 0x07, 0x08,
0x06, 0x06, 0x06, 0x03, 0x05, 0x03, 0x06, 0x05,
0x03, 0x05, 0x05, 0x05, 0x06, 0x06, 0x04, 0x06,
0x05, 0x02, 0x03, 0x04, 0x02, 0x06, 0x05, 0x06,
0x05, 0x05, 0x04, 0x05, 0x04, 0x05, 0x06, 0x08,
0x06, 0x05, 0x05, 0x04, 0x02, 0x04, 0x05, 0x05,
0x06, 0x04, 0x03, 0x03, 0x05, 0x07, 0x04, 0x04,
0x06, 0x0C, 0x0A, 0x03, 0x09, 0x05, 0x07, 0x06,
0x06, 0x03, 0x03, 0x05, 0x05, 0x03, 0x06, 0x0A,
0x04, 0x07, 0x08, 0x03, 0x07, 0x04, 0x06, 0x05,
0x05, 0x06, 0x05, 0x04, 0x07, 0x04, 0x02, 0x04,
0x05, 0x08, 0x06, 0x05, 0x05, 0x03, 0x08, 0x04,
0x03, 0x06, 0x04, 0x02, 0x04, 0x05, 0x06, 0x02,
0x06, 0x0A, 0x05, 0x05, 0x02, 0x05, 0x05, 0x04,
0x07, 0x05, 0x05, 0x04, 0x07, 0x05, 0x08, 0x06,
0x06, 0x06, 0x05, 0x06, 0x08, 0x06, 0x07, 0x06,
0x05, 0x06, 0x06, 0x06, 0x08, 0x06, 0x07, 0x05,
0x08, 0x09, 0x06, 0x06, 0x05, 0x07, 0x09, 0x05,
0x05, 0x05, 0x05, 0x04, 0x07, 0x06, 0x08, 0x05,
0x05, 0x05, 0x05, 0x05, 0x06, 0x05, 0x06, 0x05,
0x05, 0x05, 0x04, 0x06, 0x08, 0x06, 0x06, 0x05,
0x06, 0x07, 0x05, 0x06, 0x05, 0x05, 0x07, 0x05,

/* Font data for displays organized as
   rows of vertical bytes */

/* Code: 0x20, ASCII Character: ' ' */
0x00, 0x00, 0x00, 0x00, 0x00,

/* Code: 0x21, ASCII Character: '!' */
0x00, 0xBE, 0x00,

/* Code: 0x22, ASCII Character: '"' */
0x00, 0x06, 0x00, 0x06,

/* Code: 0x23, ASCII Character: '#' */
0x00, 0x28, 0xF8, 0x2E, 0xF8, 0x2E, 0x28,

/* Code: 0x24, ASCII Character: '$' */
0x00, 0x8C, 0x92, 0xFF, 0x92, 0x62,

/* Code: 0x25, ASCII Character: '%' */
0x00, 0x0E, 0x8A, 0x6E, 0x18, 0xE4, 0xA2, 0xE0,

/* Code: 0x26, ASCII Character: '&' */
0x00, 0x60, 0x9E, 0x9A, 0xB6, 0x60, 0x98,

/* Code: 0x27, ASCII Character: ''' */
0x00, 0x06,

/* Code: 0x28, ASCII Character: '(' */
0x00, 0x7C, 0x82,

/* Code: 0x29, ASCII Character: ')' */
0x00, 0x82, 0x7C,

/* Code: 0x2A, ASCII Character: '*' */
0x00, 0x14, 0x0E, 0x14,

/* Code: 0x2B, ASCII Character: '+' */
0x00, 0x10, 0x10, 0x7C, 0x10, 0x10,

/* Code: 0x2C, ASCII Character: ',' */
0x00, 0x80, 0x40,

/* Code: 0x2D, ASCII Character: '-' */
0x00, 0x20, 0x20, 0x20,

/* Code: 0x2E, ASCII Character: '.' */
0x00, 0x80,

/* Code: 0x2F, ASCII Character: '/' */
0x00, 0xC0, 0x30, 0x08, 0x06,

/* Code: 0x30, ASCII Character: '0' */
0x00, 0x7C, 0x82, 0x82, 0x82, 0x7C,

/* Code: 0x31, ASCII Character: '1' */
0x00, 0x82, 0xFE, 0x80,

/* Code: 0x32, ASCII Character: '2' */
0x00, 0x84, 0xC2, 0xA2, 0x92, 0x8C,

/* Code: 0x33, ASCII Character: '3' */
0x00, 0x82, 0x92, 0x92, 0x6C,

/* Code: 0x34, ASCII Character: '4' */
0x00, 0x30, 0x28, 0x24, 0xFE, 0x20,

/* Code: 0x35, ASCII Character: '5' */
0x00, 0x9E, 0x92, 0x92, 0x62,

/* Code: 0x36, ASCII Character: '6' */
0x00, 0x78, 0x94, 0x92, 0x92, 0x62,

/* Code: 0x37, ASCII Character: '7' */
0x00, 0x02, 0x82, 0x62, 0x1A, 0x06,

/* Code: 0x38, ASCII Character: '8' */
0x00, 0x6C, 0x92, 0x92, 0x92, 0x6C,

/* Code: 0x39, ASCII Character: '9' */
0x00, 0x8C, 0x92, 0x92, 0x52, 0x3C,

/* Code: 0x3A, ASCII Character: ':' */
0x00, 0x48,

/* Code: 0x3B, ASCII Character: ';' */
0x80, 0x48,

/* Code: 0x3C, ASCII Character: '<' */
0x00, 0x20, 0x50, 0x88,

/* Code: 0x3D, ASCII Character: '=' */
0x00, 0x50, 0x50, 0x50, 0x50,

/* Code: 0x3E, ASCII Character: '>' */
0x00, 0x88, 0x50, 0x20,

/* Code: 0x3F, ASCII Character: '?' */
0x00, 0x04, 0x02, 0xB2, 0x0C,

/* Code: 0x40, ASCII Character: '@' */
0x00, 0x3C, 0x42, 0x99, 0xA5, 0xB9, 0xA2, 0x9C,

/* Code: 0x41, ASCII Character: 'A' */
0x00, 0xC0, 0x38, 0x26, 0x38, 0xC0,

/* Code: 0x42, ASCII Character: 'B' */
0x00, 0xFE, 0x92, 0x92, 0x6C,

/* Code: 0x43, ASCII Character: 'C' */
0x00, 0x38, 0x44, 0x82, 0x82, 0x44,

/* Code: 0x44, ASCII Character: 'D' */
0x00, 0xFE, 0x82, 0x82, 0x44, 0x38,

/* Code: 0x45, ASCII Character: 'E' */
0x00, 0xFE, 0x92, 0x92, 0x92,

/* Code: 0x46, ASCII Character: 'F' */
0x00, 0xFE, 0x12, 0x12,

/* Code: 0x47, ASCII Character: 'G' */
0x00, 0x38, 0x44, 0x82, 0x92, 0x92, 0x72,

/* Code: 0x48, ASCII Character: 'H' */
0x00, 0xFE, 0x10, 0x10, 0x10, 0xFE,

/* Code: 0x49, ASCII Character: 'I' */
0x00, 0x82, 0xFE, 0x82,

/* Code: 0x4A, ASCII Character: 'J' */
0x00, 0x40, 0x80, 0x7E,

/* Code: 0x4B, ASCII Character: 'K' */
0x00, 0xFE, 0x28, 0x44, 0x82,

/* Code: 0x4C, ASCII Character: 'L' */
0x00, 0xFE, 0x80, 0x80,

/* Code: 0x4D, ASCII Character: 'M' */
0x00, 0xFE, 0x04, 0x08, 0x10, 0x08, 0x04, 0xFE,

/* Code: 0x4E, ASCII Character: 'N' */
0x00, 0xFE, 0x0C, 0x30, 0x40, 0xFE,

/* Code: 0x4F, ASCII Character: 'O' */
0x00, 0x38, 0x44, 0x82, 0x82, 0x82, 0x44, 0x38,

/* Code: 0x50, ASCII Character: 'P' */
0x00, 0xFE, 0x22, 0x22, 0x1C,

/* Code: 0x51, ASCII Character: 'Q' */
0x00, 0x38, 0x44, 0x82, 0x82, 0xA2, 0x44, 0xB8,

/* Code: 0x52, ASCII Character: 'R' */
0x00, 0xFE, 0x12, 0x32, 0xCC,

/* Code: 0x53, ASCII Character: 'S' */
0x00, 0x8C, 0x92, 0x92, 0x62,

/* Code: 0x54, ASCII Character: 'T' */
0x00, 0x02, 0x02, 0xFE, 0x02, 0x02,

/* Code: 0x55, ASCII Character: 'U' */
0x00, 0x7E, 0x80, 0x80, 0x80, 0x7E,

/* Code: 0x56, ASCII Character: 'V' */
0x00, 0x06, 0x38, 0xC0, 0xC0, 0x38, 0x06,

/* Code: 0x57, ASCII Character: 'W' */
0x00, 0x0E, 0x30, 0xE0, 0x1C, 0xE0, 0x30, 0x0E,

/* Code: 0x58, ASCII Character: 'X' */
0x00, 0xC6, 0x28, 0x10, 0x28, 0xC6,

/* Code: 0x59, ASCII Character: 'Y' */
0x00, 0x06, 0x18, 0xE0, 0x18, 0x06,

/* Code: 0x5A, ASCII Character: 'Z' */
0x00, 0xC2, 0xA2, 0x92, 0x8A, 0x86,

/* Code: 0x5B, ASCII Character: '[' */
0x00, 0xFE, 0x82,

/* Code: 0x5C, ASCII Character: '\' */
0x00, 0x02, 0x0C, 0x30, 0xC0,

/* Code: 0x5D, ASCII Character: ']' */
0x82, 0xFE, 0x00,

/* Code: 0x5E, ASCII Character: '^' */
0x00, 0x10, 0x08, 0x04, 0x08, 0x10,

/* Code: 0x5F, ASCII Character: '_' */
0x00, 0x80, 0x80, 0x80, 0x80,

/* Code: 0x60, ASCII Character: '`' */
0x00, 0x02, 0x04,

/* Code: 0x61, ASCII Character: 'a' */
0x00, 0x40, 0xA8, 0xA8, 0xF0,

/* Code: 0x62, ASCII Character: 'b' */
0x00, 0xFE, 0x88, 0x88, 0x70,

/* Code: 0x63, ASCII Character: 'c' */
0x00, 0x70, 0x88, 0x88, 0x88,

/* Code: 0x64, ASCII Character: 'd' */
0x00, 0x70, 0x88, 0x88, 0x88, 0xFE,

/* Code: 0x65, ASCII Character: 'e' */
0x00, 0x70, 0xA8, 0xA8, 0xA8, 0x30,

/* Code: 0x66, ASCII Character: 'f' */
0x00, 0x08, 0xFE, 0x0A,

/* Code: 0x67, ASCII Character: 'g' */
0x00, 0x18, 0x24, 0xA4, 0xA4, 0x7C,

/* Code: 0x68, ASCII Character: 'h' */
0x00, 0xFE, 0x08, 0x08, 0xF0,

/* Code: 0x69, ASCII Character: 'i' */
0x00, 0xFA,

/* Code: 0x6A, ASCII Character: 'j' */
0x00, 0x80, 0xFA,

/* Code: 0x6B, ASCII Character: 'k' */
0x00, 0xFE, 0x50, 0x88,

/* Code: 0x6C, ASCII Character: 'l' */
0x00, 0xFE,

/* Code: 0x6D, ASCII Character: 'm' */
0x00, 0xF8, 0x08, 0xF8, 0x08, 0xF8,

/* Code: 0x6E, ASCII Character: 'n' */
0x00, 0xF8, 0x08, 0x08, 0xF0,

/* Code: 0x6F, ASCII Character: 'o' */
0x00, 0x70, 0x88, 0x88, 0x88, 0x70,

/* Code: 0x70, ASCII Character: 'p' */
0x00, 0xF8, 0x48, 0x48, 0x30,

/* Code: 0x71, ASCII Character: 'q' */
0x00, 0x30, 0x48, 0x48, 0xF8,

/* Code: 0x72, ASCII Character: 'r' */
0x00, 0xF0, 0x08, 0x08,

/* Code: 0x73, ASCII Character: 's' */
0x00, 0x90, 0xA8, 0xA8, 0x48,

/* Code: 0x74, ASCII Character: 't' */
0x00, 0x08, 0xFC, 0x88,

/* Code: 0x75, ASCII Character: 'u' */
0x00, 0x78, 0x80, 0x80, 0xF8,

/* Code: 0x76, ASCII Character: 'v' */
0x00, 0x18, 0x60, 0x80, 0x60, 0x18,

/* Code: 0x77, ASCII Character: 'w' */
0x00, 0x18, 0x20, 0xC0, 0x38, 0xC0, 0x20, 0x18,

/* Code: 0x78, ASCII Character: 'x' */
0x00, 0x88, 0x50, 0x20, 0x50, 0x88,

/* Code: 0x79, ASCII Character: 'y' */
0x00, 0x98, 0xA0, 0x60, 0x18,

/* Code: 0x7A, ASCII Character: 'z' */
0x00, 0xC8, 0xA8, 0x98, 0x88,

/* Code: 0x7B, ASCII Character: '{' */
0x00, 0x10, 0xEE, 0x82,

/* Code: 0x7C, ASCII Character: '|' */
0x00, 0xFE,

/* Code: 0x7D, ASCII Character: '}' */
0x00, 0x82, 0xEE, 0x10,

/* Code: 0x7E, ASCII Character: '~' */
0x00, 0x40, 0x20, 0x40, 0x20,

/* Code: 0x7F, ASCII Character: '' */
0x00, 0xFC, 0x84, 0x84, 0xFC,

/* Code: 0x80, ASCII Character: 'Ђ' */
0x00, 0x02, 0xFE, 0x52, 0x90, 0xE0,

/* Code: 0x81, ASCII Character: 'Ѓ' */
0x00, 0xFE, 0x03, 0x02,

/* Code: 0x82, ASCII Character: '‚' */
0x00, 0x80, 0x40,

/* Code: 0x83, ASCII Character: 'ѓ' */
0x00, 0xFA, 0x09,

/* Code: 0x84, ASCII Character: '„' */
0x00, 0x80, 0x40, 0x80, 0x40,

/* Code: 0x85, ASCII Character: '…' */
0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00,

/* Code: 0x86, ASCII Character: '†' */
0x00, 0x08, 0x7E, 0x08,

/* Code: 0x87, ASCII Character: '‡' */
0x00, 0x48, 0xFE, 0x48,

/* Code: 0x88, ASCII Character: '€' */
0x00, 0x28, 0x7C, 0xAA, 0xAA, 0x82,

/* Code: 0x89, ASCII Character: '‰' */
0x00, 0x0E, 0x8A, 0x6E, 0x18, 0xE4, 0xA2, 0xE0,
0x00, 0xE0, 0xA0, 0xE0,

/* Code: 0x8A, ASCII Character: 'Љ' */
0x00, 0x80, 0xF8, 0x06, 0x02, 0x02, 0xFE, 0x90,
0x90, 0x70,

/* Code: 0x8B, ASCII Character: '‹' */
0x00, 0x20, 0x50,

/* Code: 0x8C, ASCII Character: 'Њ' */
0x00, 0xFE, 0x10, 0x10, 0x10, 0xFE, 0x90, 0x90,
0x70,

/* Code: 0x8D, ASCII Character: 'Ќ' */
0x00, 0xFE, 0x30, 0x49, 0x84,

/* Code: 0x8E, ASCII Character: 'Ћ' */
0x00, 0x02, 0xFE, 0x22, 0x12, 0x10, 0xE0,

/* Code: 0x8F, ASCII Character: 'Џ' */
0x00, 0xFE, 0x80, 0x80, 0x80, 0xFE,

/* Code: 0x90, ASCII Character: 'ђ' */
0x00, 0x02, 0xFE, 0x0A, 0x08, 0xF0,

/* Code: 0x91, ASCII Character: '‘' */
0x00, 0x02, 0x04,

/* Code: 0x92, ASCII Character: '’' */
0x00, 0x04, 0x02,

/* Code: 0x93, ASCII Character: '“' */
0x00, 0x02, 0x04, 0x02, 0x04,

/* Code: 0x94, ASCII Character: '”' */
0x00, 0x04, 0x02, 0x04, 0x02,

/* Code: 0x95, ASCII Character: '•' */
0x00, 0x30, 0x30,

/* Code: 0x96, ASCII Character: '–' */
0x00, 0x20, 0x20, 0x20, 0x20, 0x20,

/* Code: 0x97, ASCII Character: '—' */
0x00, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
0x20, 0x20,

/* Code: 0x98, ASCII Character: '' */
0x00, 0x02, 0x02, 0x02,

/* Code: 0x99, ASCII Character: '™' */
0x00, 0x02, 0x0E, 0x02, 0x0E, 0x04, 0x0E,

/* Code: 0x9A, ASCII Character: 'љ' */
0x00, 0x80, 0x78, 0x08, 0xF8, 0xA0, 0xA0, 0xE0,

/* Code: 0x9B, ASCII Character: '›' */
0x00, 0x50, 0x20,

/* Code: 0x9C, ASCII Character: 'њ' */
0x00, 0xF8, 0x20, 0xF8, 0xA0, 0xA0, 0xE0,

/* Code: 0x9D, ASCII Character: 'ќ' */
0x00, 0xF8, 0x52, 0x89,

/* Code: 0x9E, ASCII Character: 'ћ' */
0x00, 0x02, 0xFE, 0x0A, 0x08, 0xF8,

/* Code: 0x9F, ASCII Character: 'џ' */
0x00, 0x78, 0xC0, 0x40, 0x38,

/* Code: 0xA0, ASCII Character: ' ' */
0x00, 0x00, 0x00, 0x00, 0x00,

/* Code: 0xA1, ASCII Character: 'Ў' */
0x00, 0x9E, 0xA0, 0xA1, 0x60, 0x3E,

/* Code: 0xA2, ASCII Character: 'ў' */
0x00, 0x98, 0xA0, 0x62, 0x18,

/* Code: 0xA3, ASCII Character: 'Ј' */
0x00, 0x40, 0x80, 0x7E,

/* Code: 0xA4, ASCII Character: '¤' */
0x00, 0x84, 0x78, 0x48, 0x48, 0x78, 0x84,

/* Code: 0xA5, ASCII Character: 'Ґ' */
0x00, 0xFE, 0x02, 0x03,

/* Code: 0xA6, ASCII Character: '¦' */
0x00, 0xEE,

/* Code: 0xA7, ASCII Character: '§' */
0x00, 0x9E, 0xAA, 0xF2,

/* Code: 0xA8, ASCII Character: 'Ё' */
0x00, 0xFE, 0x93, 0x92, 0x93,

/* Code: 0xA9, ASCII Character: '©' */
0x00, 0x38, 0x44, 0xBA, 0xAA, 0xAA, 0x44, 0x38,

/* Code: 0xAA, ASCII Character: 'Є' */
0x00, 0x7C, 0x92, 0x92, 0x82, 0x44,

/* Code: 0xAB, ASCII Character: '«' */
0x00, 0x30, 0x48, 0x30, 0x48,

/* Code: 0xAC, ASCII Character: '¬' */
0x00, 0x10, 0x10, 0x10, 0x70,

/* Code: 0xAD, ASCII Character: '­' */
0x00, 0x20, 0x20,

/* Code: 0xAE, ASCII Character: '®' */
0x00, 0x38, 0x44, 0xFA, 0xAA, 0xD2, 0x44, 0x38,

/* Code: 0xAF, ASCII Character: 'Ї' */
0x00, 0x82, 0xFE, 0x82,

/* Code: 0xB0, ASCII Character: '°' */
0x00, 0x06, 0x06,

/* Code: 0xB1, ASCII Character: '±' */
0x00, 0x90, 0x90, 0xFC, 0x90, 0x90,

/* Code: 0xB2, ASCII Character: 'І' */
0x00, 0x82, 0xFE, 0x82,

/* Code: 0xB3, ASCII Character: 'і' */
0x00, 0xFA,

/* Code: 0xB4, ASCII Character: 'ґ' */
0x00, 0xF8, 0x08, 0x0C,

/* Code: 0xB5, ASCII Character: 'µ' */
0x00, 0xF8, 0x80, 0x80, 0xF8,

/* Code: 0xB6, ASCII Character: '¶' */
0x00, 0x0C, 0x1E, 0x7E, 0x02, 0x7E,

/* Code: 0xB7, ASCII Character: '·' */
0x00, 0x20,

/* Code: 0xB8, ASCII Character: 'ё' */
0x00, 0x70, 0xAA, 0xA8, 0xAA, 0xB0,

/* Code: 0xB9, ASCII Character: '№' */
0x00, 0xFE, 0x0C, 0x38, 0x60, 0xFE, 0x4C, 0x52,
0x52, 0x4C,

/* Code: 0xBA, ASCII Character: 'є' */
0x00, 0x70, 0xA8, 0xA8, 0x88,

/* Code: 0xBB, ASCII Character: '»' */
0x48, 0x30, 0x48, 0x30, 0x00,

/* Code: 0xBC, ASCII Character: 'ј' */
0x00, 0xFA,

/* Code: 0xBD, ASCII Character: 'Ѕ' */
0x00, 0x8C, 0x92, 0x92, 0x62,

/* Code: 0xBE, ASCII Character: 'ѕ' */
0x00, 0x90, 0xA8, 0xA8, 0x48,

/* Code: 0xBF, ASCII Character: 'ї' */
0x00, 0x02, 0xF8, 0x02,

/* Code: 0xC0, ASCII Character: 'А' */
0x00, 0xC0, 0x38, 0x26, 0x26, 0x38, 0xC0,

/* Code: 0xC1, ASCII Character: 'Б' */
0x00, 0xFE, 0x92, 0x92, 0x72,

/* Code: 0xC2, ASCII Character: 'В' */
0x00, 0xFE, 0x92, 0x92, 0x6C,

/* Code: 0xC3, ASCII Character: 'Г' */
0x00, 0xFE, 0x02, 0x02,

/* Code: 0xC4, ASCII Character: 'Д' */
0x00, 0x80, 0xF0, 0x8E, 0x82, 0xFE, 0x80,

/* Code: 0xC5, ASCII Character: 'Е' */
0x00, 0xFE, 0x92, 0x92, 0x92,

/* Code: 0xC6, ASCII Character: 'Ж' */
0x00, 0x82, 0x44, 0x28, 0xFE, 0x28, 0x44, 0x82,

/* Code: 0xC7, ASCII Character: 'З' */
0x00, 0x82, 0x92, 0x92, 0x92, 0x6C,

/* Code: 0xC8, ASCII Character: 'И' */
0x00, 0xFE, 0x40, 0x30, 0x0C, 0xFE,

/* Code: 0xC9, ASCII Character: 'Й' */
0x00, 0xFE, 0x40, 0x31, 0x0C, 0xFE,

/* Code: 0xCA, ASCII Character: 'К' */
0x00, 0xFE, 0x28, 0x44, 0x82,

/* Code: 0xCB, ASCII Character: 'Л' */
0x00, 0x80, 0xF8, 0x06, 0x02, 0xFE,

/* Code: 0xCC, ASCII Character: 'М' */
0x00, 0xFE, 0x04, 0x08, 0x10, 0x08, 0x04, 0xFE,

/* Code: 0xCD, ASCII Character: 'Н' */
0x00, 0xFE, 0x10, 0x10, 0x10, 0xFE,

/* Code: 0xCE, ASCII Character: 'О' */
0x00, 0x38, 0x44, 0x82, 0x82, 0x44, 0x38,

/* Code: 0xCF, ASCII Character: 'П' */
0x00, 0xFE, 0x02, 0x02, 0x02, 0xFE,

/* Code: 0xD0, ASCII Character: 'Р' */
0x00, 0xFE, 0x22, 0x22, 0x1C,

/* Code: 0xD1, ASCII Character: 'С' */
0x00, 0x38, 0x44, 0x82, 0x82, 0x82,

/* Code: 0xD2, ASCII Character: 'Т' */
0x00, 0x02, 0x02, 0xFE, 0x02, 0x02,

/* Code: 0xD3, ASCII Character: 'У' */
0x00, 0x86, 0x98, 0x60, 0x18, 0x06,

/* Code: 0xD4, ASCII Character: 'Ф' */
0x00, 0x38, 0x44, 0x44, 0xFE, 0x44, 0x44, 0x38,

/* Code: 0xD5, ASCII Character: 'Х' */
0x00, 0x82, 0x6C, 0x10, 0x6C, 0x82,

/* Code: 0xD6, ASCII Character: 'Ц' */
0x00, 0xFE, 0x80, 0x80, 0x80, 0xFE, 0x80,

/* Code: 0xD7, ASCII Character: 'Ч' */
0x00, 0x1E, 0x10, 0x10, 0xFE,

/* Code: 0xD8, ASCII Character: 'Ш' */
0x00, 0xFE, 0x80, 0x80, 0xFE, 0x80, 0x80, 0xFE,

/* Code: 0xD9, ASCII Character: 'Щ' */
0x00, 0xFE, 0x80, 0x80, 0xFE, 0x80, 0x80, 0xFE,
0x80,

/* Code: 0xDA, ASCII Character: 'Ъ' */
0x02, 0x02, 0xFE, 0x90, 0x90, 0x60,

/* Code: 0xDB, ASCII Character: 'Ы' */
0x00, 0xFE, 0x90, 0x60, 0x00, 0xFE,

/* Code: 0xDC, ASCII Character: 'Ь' */
0x00, 0xFE, 0x90, 0x90, 0x60,

/* Code: 0xDD, ASCII Character: 'Э' */
0x00, 0x82, 0x92, 0x92, 0x92, 0x54, 0x38,

/* Code: 0xDE, ASCII Character: 'Ю' */
0x00, 0xFE, 0x10, 0x38, 0x44, 0x82, 0x82, 0x44,
0x38,

/* Code: 0xDF, ASCII Character: 'Я' */
0x00, 0xCC, 0x32, 0x12, 0xFE,

/* Code: 0xE0, ASCII Character: 'а' */
0x00, 0xC8, 0xA8, 0xA8, 0xF8,

/* Code: 0xE1, ASCII Character: 'б' */
0x00, 0x78, 0x8C, 0x8A, 0x72,

/* Code: 0xE2, ASCII Character: 'в' */
0x00, 0xF8, 0xA8, 0xA8, 0xD8,

/* Code: 0xE3, ASCII Character: 'г' */
0x00, 0xF8, 0x08, 0x08,

/* Code: 0xE4, ASCII Character: 'д' */
0x00, 0x80, 0xE0, 0x98, 0x88, 0xF8, 0x80,

/* Code: 0xE5, ASCII Character: 'е' */
0x00, 0x70, 0xA8, 0xA8, 0xA8, 0xB0,

/* Code: 0xE6, ASCII Character: 'ж' */
0x00, 0x88, 0x50, 0x20, 0xF8, 0x20, 0x50, 0x88,

/* Code: 0xE7, ASCII Character: 'з' */
0x00, 0x88, 0xA8, 0xA8, 0xD8,

/* Code: 0xE8, ASCII Character: 'и' */
0x00, 0xF8, 0x60, 0x10, 0xF8,

/* Code: 0xE9, ASCII Character: 'й' */
0x00, 0xF8, 0x62, 0x12, 0xF8,

/* Code: 0xEA, ASCII Character: 'к' */
0x00, 0xF8, 0x20, 0x50, 0x88,

/* Code: 0xEB, ASCII Character: 'л' */
0x00, 0x80, 0x78, 0x08, 0xF8,

/* Code: 0xEC, ASCII Character: 'м' */
0x00, 0xF8, 0x10, 0x20, 0x10, 0xF8,

/* Code: 0xED, ASCII Character: 'н' */
0x00, 0xF8, 0x20, 0x20, 0xF8,

/* Code: 0xEE, ASCII Character: 'о' */
0x00, 0x70, 0x88, 0x88, 0x88, 0x70,

/* Code: 0xEF, ASCII Character: 'п' */
0x00, 0xF8, 0x08, 0x08, 0xF8,

/* Code: 0xF0, ASCII Character: 'р' */
0x00, 0xF8, 0x48, 0x48, 0x30,

/* Code: 0xF1, ASCII Character: 'с' */
0x00, 0x70, 0x88, 0x88, 0x88,

/* Code: 0xF2, ASCII Character: 'т' */
0x00, 0x08, 0xF8, 0x08,

/* Code: 0xF3, ASCII Character: 'у' */
0x00, 0x88, 0x50, 0x20, 0x10, 0x08,

/* Code: 0xF4, ASCII Character: 'ф' */
0x00, 0x38, 0x44, 0x44, 0xFE, 0x44, 0x44, 0x38,

/* Code: 0xF5, ASCII Character: 'х' */
0x00, 0x88, 0x50, 0x20, 0x50, 0x88,

/* Code: 0xF6, ASCII Character: 'ц' */
0x00, 0xF8, 0x80, 0x80, 0xF8, 0x80,

/* Code: 0xF7, ASCII Character: 'ч' */
0x00, 0x38, 0x20, 0x20, 0xF8,

/* Code: 0xF8, ASCII Character: 'ш' */
0x00, 0xF8, 0x80, 0xF8, 0x80, 0xF8,

/* Code: 0xF9, ASCII Character: 'щ' */
0x00, 0xF8, 0x80, 0xF8, 0x80, 0xF8, 0x80,

/* Code: 0xFA, ASCII Character: 'ъ' */
0x00, 0x08, 0xF8, 0xA0, 0xE0,

/* Code: 0xFB, ASCII Character: 'ы' */
0x00, 0xF8, 0xA0, 0xE0, 0x00, 0xF8,

/* Code: 0xFC, ASCII Character: 'ь' */
0x00, 0xF8, 0xA0, 0xA0, 0xE0,

/* Code: 0xFD, ASCII Character: 'э' */
0x00, 0x88, 0xA8, 0xA8, 0x70,

/* Code: 0xFE, ASCII Character: 'ю' */
0x00, 0xF8, 0x20, 0x70, 0x88, 0x88, 0x70,

/* Code: 0xFF, ASCII Character: 'я' */
0x00, 0x98, 0x68, 0x28, 0xF8,


};


const unsigned char tahoma_bold[] PROGMEM=
{

0x20, /* First character */
0xE0, /* Number of characters in font */
/* Character widths */
0x07, 0x05, 0x06, 0x09, 0x08, 0x0E, 0x0B, 0x04,
0x06, 0x06, 0x08, 0x0B, 0x04, 0x06, 0x04, 0x08,
0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08,
0x08, 0x08, 0x05, 0x05, 0x0B, 0x0B, 0x0B, 0x07,
0x0A, 0x0A, 0x08, 0x08, 0x09, 0x07, 0x06, 0x08,
0x09, 0x05, 0x06, 0x08, 0x07, 0x0B, 0x08, 0x09,
0x08, 0x09, 0x09, 0x08, 0x07, 0x08, 0x0A, 0x0E,
0x0A, 0x0A, 0x07, 0x06, 0x08, 0x06, 0x0B, 0x08,
0x07, 0x08, 0x08, 0x07, 0x08, 0x08, 0x05, 0x08,
0x08, 0x03, 0x04, 0x07, 0x03, 0x0B, 0x08, 0x08,
0x08, 0x08, 0x06, 0x07, 0x06, 0x08, 0x09, 0x0B,
0x08, 0x09, 0x07, 0x07, 0x07, 0x07, 0x0B, 0x09,
0x0A, 0x07, 0x04, 0x06, 0x06, 0x0D, 0x08, 0x08,
0x08, 0x14, 0x0E, 0x06, 0x0E, 0x08, 0x0B, 0x09,
0x08, 0x04, 0x04, 0x06, 0x06, 0x08, 0x08, 0x0C,
0x06, 0x0B, 0x0D, 0x06, 0x0C, 0x08, 0x08, 0x07,
0x07, 0x09, 0x09, 0x06, 0x08, 0x07, 0x07, 0x08,
0x07, 0x0C, 0x08, 0x09, 0x0B, 0x06, 0x0C, 0x06,
0x07, 0x0B, 0x05, 0x03, 0x06, 0x08, 0x08, 0x05,
0x08, 0x10, 0x07, 0x09, 0x04, 0x08, 0x07, 0x06,
0x0A, 0x08, 0x08, 0x07, 0x0A, 0x07, 0x0D, 0x08,
0x08, 0x08, 0x08, 0x0A, 0x0B, 0x09, 0x09, 0x0A,
0x08, 0x08, 0x07, 0x09, 0x0B, 0x0A, 0x0A, 0x09,
0x0D, 0x0E, 0x0A, 0x0B, 0x08, 0x08, 0x0E, 0x09,
0x08, 0x08, 0x08, 0x06, 0x09, 0x08, 0x0D, 0x07,
0x07, 0x07, 0x08, 0x09, 0x0A, 0x08, 0x08, 0x08,
0x08, 0x07, 0x07, 0x09, 0x0B, 0x08, 0x09, 0x08,
0x0B, 0x0C, 0x0A, 0x0B, 0x07, 0x07, 0x0C, 0x08,

/* Font data for displays organized as
   rows of vertical bytes */

/* Code: 0x20, ASCII Character: ' ' */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

/* Code: 0x21, ASCII Character: '!' */
0x00, 0xF0, 0xF0, 0x00, 0x00, 0x00, 0x1B, 0x1B,
0x00, 0x00,

/* Code: 0x22, ASCII Character: '"' */
0x78, 0x78, 0x00, 0x78, 0x78, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00,

/* Code: 0x23, ASCII Character: '#' */
0x00, 0xC0, 0xC0, 0xF0, 0xC0, 0xC0, 0xF0, 0xC0,
0x00, 0x06, 0x1E, 0x07, 0x06, 0x1E, 0x07, 0x06,
0x00, 0x00,

/* Code: 0x24, ASCII Character: '$' */
0xE0, 0xF0, 0x10, 0xFC, 0x10, 0x10, 0x20, 0x00,
0x08, 0x11, 0x11, 0x7F, 0x11, 0x1F, 0x0E, 0x00,

/* Code: 0x25, ASCII Character: '%' */
0xE0, 0xF0, 0x10, 0x10, 0xF0, 0xE0, 0x00, 0x80,
0x40, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
0x01, 0x09, 0x05, 0x02, 0x01, 0x0E, 0x1F, 0x11,
0x11, 0x1F, 0x0E, 0x00,

/* Code: 0x26, ASCII Character: '&' */
0x00, 0xE0, 0xF0, 0x10, 0x10, 0xF0, 0xE0, 0x00,
0x00, 0x00, 0x00, 0x00, 0x0E, 0x1F, 0x11, 0x11,
0x13, 0x0E, 0x1C, 0x17, 0x13, 0x00,

/* Code: 0x27, ASCII Character: ''' */
0x00, 0x78, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00,

/* Code: 0x28, ASCII Character: '(' */
0x00, 0xC0, 0xF0, 0x38, 0x08, 0x00, 0x00, 0x1F,
0x7F, 0xE0, 0x80, 0x00,

/* Code: 0x29, ASCII Character: ')' */
0x00, 0x08, 0x38, 0xF0, 0xC0, 0x00, 0x00, 0x80,
0xE0, 0x7F, 0x1F, 0x00,

/* Code: 0x2A, ASCII Character: '*' */
0x00, 0x50, 0x20, 0xF8, 0xF8, 0x20, 0x50, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

/* Code: 0x2B, ASCII Character: '+' */
0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01,
0x0F, 0x01, 0x01, 0x01, 0x00, 0x00,

/* Code: 0x2C, ASCII Character: ',' */
0x00, 0x00, 0x00, 0x00, 0x60, 0x78, 0x18, 0x00,

/* Code: 0x2D, ASCII Character: '-' */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01,
0x01, 0x01, 0x01, 0x00,

/* Code: 0x2E, ASCII Character: '.' */
0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18, 0x00,

/* Code: 0x2F, ASCII Character: '/' */
0x00, 0x00, 0x00, 0x80, 0x60, 0x18, 0x00, 0x00,
0x60, 0x18, 0x06, 0x01, 0x00, 0x00, 0x00, 0x00,

/* Code: 0x30, ASCII Character: '0' */
0xE0, 0xF0, 0x10, 0x10, 0x10, 0xF0, 0xE0, 0x00,
0x0F, 0x1F, 0x10, 0x10, 0x10, 0x1F, 0x0F, 0x00,

/* Code: 0x31, ASCII Character: '1' */
0x00, 0x20, 0x20, 0xF0, 0xF0, 0x00, 0x00, 0x00,
0x00, 0x10, 0x10, 0x1F, 0x1F, 0x10, 0x10, 0x00,

/* Code: 0x32, ASCII Character: '2' */
0x60, 0x10, 0x10, 0x10, 0x10, 0xF0, 0xE0, 0x00,
0x10, 0x18, 0x1C, 0x16, 0x13, 0x11, 0x10, 0x00,

/* Code: 0x33, ASCII Character: '3' */
0x20, 0x10, 0x10, 0x10, 0x10, 0xF0, 0xE0, 0x00,
0x08, 0x10, 0x11, 0x11, 0x11, 0x1F, 0x0E, 0x00,

/* Code: 0x34, ASCII Character: '4' */
0x00, 0x80, 0x40, 0x20, 0xF0, 0xF0, 0x00, 0x00,
0x03, 0x02, 0x02, 0x02, 0x1F, 0x1F, 0x02, 0x00,

/* Code: 0x35, ASCII Character: '5' */
0x00, 0xF0, 0xF0, 0x90, 0x90, 0x90, 0x10, 0x00,
0x08, 0x10, 0x10, 0x10, 0x10, 0x1F, 0x0F, 0x00,

/* Code: 0x36, ASCII Character: '6' */
0xC0, 0xE0, 0xB0, 0x90, 0x90, 0x90, 0x00, 0x00,
0x0F, 0x1F, 0x10, 0x10, 0x10, 0x1F, 0x0F, 0x00,

/* Code: 0x37, ASCII Character: '7' */
0x10, 0x10, 0x10, 0x10, 0xD0, 0xF0, 0x30, 0x00,
0x00, 0x00, 0x1C, 0x1F, 0x03, 0x00, 0x00, 0x00,

/* Code: 0x38, ASCII Character: '8' */
0xE0, 0xF0, 0x10, 0x10, 0x10, 0xF0, 0xE0, 0x00,
0x0E, 0x1F, 0x11, 0x11, 0x11, 0x1F, 0x0E, 0x00,

/* Code: 0x39, ASCII Character: '9' */
0xE0, 0xF0, 0x10, 0x10, 0x10, 0xF0, 0xE0, 0x00,
0x01, 0x13, 0x12, 0x12, 0x1A, 0x0F, 0x07, 0x00,

/* Code: 0x3A, ASCII Character: ':' */
0x00, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x18, 0x18,
0x00, 0x00,

/* Code: 0x3B, ASCII Character: ';' */
0x00, 0xC0, 0xC0, 0x00, 0x00, 0x60, 0x78, 0x18,
0x00, 0x00,

/* Code: 0x3C, ASCII Character: '<' */
0x00, 0x00, 0x00, 0x80, 0x80, 0x40, 0x40, 0x20,
0x20, 0x00, 0x00, 0x00, 0x03, 0x03, 0x04, 0x04,
0x08, 0x08, 0x10, 0x10, 0x00, 0x00,

/* Code: 0x3D, ASCII Character: '=' */
0x00, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,
0x40, 0x00, 0x00, 0x00, 0x02, 0x02, 0x02, 0x02,
0x02, 0x02, 0x02, 0x02, 0x00, 0x00,

/* Code: 0x3E, ASCII Character: '>' */
0x00, 0x20, 0x20, 0x40, 0x40, 0x80, 0x80, 0x00,
0x00, 0x00, 0x00, 0x00, 0x10, 0x10, 0x08, 0x08,
0x04, 0x04, 0x03, 0x03, 0x00, 0x00,

/* Code: 0x3F, ASCII Character: '?' */
0x20, 0x10, 0x10, 0x90, 0xF0, 0x60, 0x00, 0x00,
0x00, 0x1B, 0x1B, 0x00, 0x00, 0x00,

/* Code: 0x40, ASCII Character: '@' */
0xC0, 0x20, 0x90, 0xD0, 0x50, 0xD0, 0xD0, 0x20,
0xC0, 0x00, 0x0F, 0x10, 0x27, 0x2F, 0x28, 0x27,
0x2F, 0x28, 0x07, 0x00,

/* Code: 0x41, ASCII Character: 'A' */
0x00, 0x00, 0xC0, 0xF0, 0x30, 0xF0, 0xC0, 0x00,
0x00, 0x00, 0x18, 0x1F, 0x07, 0x02, 0x02, 0x02,
0x07, 0x1F, 0x18, 0x00,

/* Code: 0x42, ASCII Character: 'B' */
0xF0, 0xF0, 0x10, 0x10, 0x10, 0xF0, 0xE0, 0x00,
0x1F, 0x1F, 0x11, 0x11, 0x11, 0x1F, 0x0E, 0x00,

/* Code: 0x43, ASCII Character: 'C' */
0xE0, 0xF0, 0x10, 0x10, 0x10, 0x10, 0x60, 0x00,
0x0F, 0x1F, 0x10, 0x10, 0x10, 0x10, 0x0C, 0x00,

/* Code: 0x44, ASCII Character: 'D' */
0xF0, 0xF0, 0x10, 0x10, 0x10, 0x30, 0xE0, 0xC0,
0x00, 0x1F, 0x1F, 0x10, 0x10, 0x10, 0x18, 0x0F,
0x07, 0x00,

/* Code: 0x45, ASCII Character: 'E' */
0xF0, 0xF0, 0x10, 0x10, 0x10, 0x10, 0x00, 0x1F,
0x1F, 0x11, 0x11, 0x11, 0x10, 0x00,

/* Code: 0x46, ASCII Character: 'F' */
0xF0, 0xF0, 0x10, 0x10, 0x10, 0x10, 0x1F, 0x1F,
0x01, 0x01, 0x01, 0x00,

/* Code: 0x47, ASCII Character: 'G' */
0xE0, 0xF0, 0x10, 0x10, 0x10, 0x10, 0x60, 0x00,
0x0F, 0x1F, 0x10, 0x10, 0x11, 0x1F, 0x1F, 0x00,

/* Code: 0x48, ASCII Character: 'H' */
0xF0, 0xF0, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0,
0x00, 0x1F, 0x1F, 0x01, 0x01, 0x01, 0x01, 0x1F,
0x1F, 0x00,

/* Code: 0x49, ASCII Character: 'I' */
0x10, 0xF0, 0xF0, 0x10, 0x00, 0x10, 0x1F, 0x1F,
0x10, 0x00,

/* Code: 0x4A, ASCII Character: 'J' */
0x00, 0x10, 0x10, 0xF0, 0xF0, 0x00, 0x10, 0x10,
0x10, 0x1F, 0x0F, 0x00,

/* Code: 0x4B, ASCII Character: 'K' */
0xF0, 0xF0, 0x80, 0xC0, 0x60, 0x30, 0x10, 0x00,
0x1F, 0x1F, 0x03, 0x06, 0x0C, 0x18, 0x10, 0x00,

/* Code: 0x4C, ASCII Character: 'L' */
0xF0, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F,
0x1F, 0x10, 0x10, 0x10, 0x10, 0x00,

/* Code: 0x4D, ASCII Character: 'M' */
0xF0, 0x30, 0xF0, 0xC0, 0x00, 0x00, 0xC0, 0x30,
0xF0, 0xF0, 0x00, 0x1F, 0x00, 0x00, 0x03, 0x0F,
0x03, 0x00, 0x00, 0x1F, 0x1F, 0x00,

/* Code: 0x4E, ASCII Character: 'N' */
0xF0, 0x30, 0xF0, 0xC0, 0x00, 0x00, 0xF0, 0x00,
0x1F, 0x00, 0x00, 0x03, 0x0F, 0x1C, 0x1F, 0x00,

/* Code: 0x4F, ASCII Character: 'O' */
0xE0, 0xF0, 0x10, 0x10, 0x10, 0x10, 0xF0, 0xE0,
0x00, 0x0F, 0x1F, 0x10, 0x10, 0x10, 0x10, 0x1F,
0x0F, 0x00,

/* Code: 0x50, ASCII Character: 'P' */
0xF0, 0xF0, 0x10, 0x10, 0x10, 0xF0, 0xE0, 0x00,
0x1F, 0x1F, 0x02, 0x02, 0x02, 0x03, 0x01, 0x00,

/* Code: 0x51, ASCII Character: 'Q' */
0xE0, 0xF0, 0x10, 0x10, 0x10, 0x10, 0xF0, 0xE0,
0x00, 0x0F, 0x1F, 0x10, 0x10, 0x10, 0x30, 0x7F,
0x4F, 0x00,

/* Code: 0x52, ASCII Character: 'R' */
0xF0, 0xF0, 0x10, 0x10, 0x10, 0xF0, 0xE0, 0x00,
0x00, 0x1F, 0x1F, 0x01, 0x03, 0x07, 0x0D, 0x18,
0x10, 0x00,

/* Code: 0x53, ASCII Character: 'S' */
0xE0, 0xF0, 0x10, 0x10, 0x10, 0x10, 0x60, 0x00,
0x0C, 0x11, 0x11, 0x11, 0x11, 0x1F, 0x0E, 0x00,

/* Code: 0x54, ASCII Character: 'T' */
0x10, 0x10, 0xF0, 0xF0, 0x10, 0x10, 0x00, 0x00,
0x00, 0x1F, 0x1F, 0x00, 0x00, 0x00,

/* Code: 0x55, ASCII Character: 'U' */
0xF0, 0xF0, 0x00, 0x00, 0x00, 0xF0, 0xF0, 0x00,
0x0F, 0x1F, 0x10, 0x10, 0x10, 0x1F, 0x0F, 0x00,

/* Code: 0x56, ASCII Character: 'V' */
0x00, 0x70, 0xF0, 0x80, 0x00, 0x00, 0x80, 0xF0,
0x70, 0x00, 0x00, 0x00, 0x01, 0x07, 0x1E, 0x1E,
0x07, 0x01, 0x00, 0x00,

/* Code: 0x57, ASCII Character: 'W' */
0x00, 0xF0, 0xF0, 0x00, 0x00, 0x80, 0xF0, 0xF0,
0x80, 0x00, 0x00, 0xF0, 0xF0, 0x00, 0x00, 0x00,
0x07, 0x1F, 0x1E, 0x07, 0x01, 0x01, 0x07, 0x1E,
0x1F, 0x07, 0x00, 0x00,

/* Code: 0x58, ASCII Character: 'X' */
0x00, 0x30, 0x70, 0xC0, 0x80, 0x80, 0xC0, 0x70,
0x30, 0x00, 0x00, 0x18, 0x1C, 0x06, 0x03, 0x03,
0x06, 0x1C, 0x18, 0x00,

/* Code: 0x59, ASCII Character: 'Y' */
0x00, 0x30, 0xF0, 0xC0, 0x00, 0x00, 0xC0, 0xF0,
0x30, 0x00, 0x00, 0x00, 0x00, 0x01, 0x1F, 0x1F,
0x01, 0x00, 0x00, 0x00,

/* Code: 0x5A, ASCII Character: 'Z' */
0x10, 0x10, 0x10, 0x90, 0xF0, 0x70, 0x00, 0x1C,
0x1E, 0x13, 0x11, 0x10, 0x10, 0x00,

/* Code: 0x5B, ASCII Character: '[' */
0x00, 0xF8, 0xF8, 0x08, 0x08, 0x00, 0x00, 0x7F,
0x7F, 0x40, 0x40, 0x00,

/* Code: 0x5C, ASCII Character: '\' */
0x18, 0x60, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x01, 0x06, 0x18, 0x60, 0x00, 0x00,

/* Code: 0x5D, ASCII Character: ']' */
0x00, 0x08, 0x08, 0xF8, 0xF8, 0x00, 0x00, 0x40,
0x40, 0x7F, 0x7F, 0x00,

/* Code: 0x5E, ASCII Character: '^' */
0x00, 0x80, 0x40, 0x20, 0x10, 0x10, 0x20, 0x40,
0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

/* Code: 0x5F, ASCII Character: '_' */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,

/* Code: 0x60, ASCII Character: '`' */
0x00, 0x00, 0x08, 0x18, 0x10, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

/* Code: 0x61, ASCII Character: 'a' */
0x00, 0x80, 0x40, 0x40, 0x40, 0xC0, 0x80, 0x00,
0x0C, 0x1E, 0x12, 0x12, 0x12, 0x1F, 0x1F, 0x00,

/* Code: 0x62, ASCII Character: 'b' */
0xF8, 0xF8, 0x80, 0x40, 0x40, 0xC0, 0x80, 0x00,
0x1F, 0x1F, 0x10, 0x10, 0x10, 0x1F, 0x0F, 0x00,

/* Code: 0x63, ASCII Character: 'c' */
0x80, 0xC0, 0x40, 0x40, 0x40, 0x80, 0x00, 0x0F,
0x1F, 0x10, 0x10, 0x10, 0x08, 0x00,

/* Code: 0x64, ASCII Character: 'd' */
0x80, 0xC0, 0x40, 0x40, 0x40, 0xF8, 0xF8, 0x00,
0x0F, 0x1F, 0x10, 0x10, 0x08, 0x1F, 0x1F, 0x00,

/* Code: 0x65, ASCII Character: 'e' */
0x80, 0xC0, 0x40, 0x40, 0x40, 0xC0, 0x80, 0x00,
0x0F, 0x1F, 0x12, 0x12, 0x12, 0x13, 0x0B, 0x00,

/* Code: 0x66, ASCII Character: 'f' */
0x40, 0xF0, 0xF8, 0x48, 0x08, 0x00, 0x1F, 0x1F,
0x00, 0x00,

/* Code: 0x67, ASCII Character: 'g' */
0x80, 0xC0, 0x40, 0x40, 0x40, 0xC0, 0xC0, 0x00,
0x4F, 0x9F, 0x90, 0x90, 0x88, 0xFF, 0x7F, 0x00,

/* Code: 0x68, ASCII Character: 'h' */
0xF8, 0xF8, 0x80, 0x40, 0x40, 0xC0, 0x80, 0x00,
0x1F, 0x1F, 0x00, 0x00, 0x00, 0x1F, 0x1F, 0x00,

/* Code: 0x69, ASCII Character: 'i' */
0xD8, 0xD8, 0x00, 0x1F, 0x1F, 0x00,

/* Code: 0x6A, ASCII Character: 'j' */
0x40, 0xD8, 0xD8, 0x00, 0x80, 0xFF, 0x7F, 0x00,

/* Code: 0x6B, ASCII Character: 'k' */
0xF8, 0xF8, 0x00, 0x80, 0xC0, 0x40, 0x00, 0x1F,
0x1F, 0x07, 0x0D, 0x18, 0x10, 0x00,

/* Code: 0x6C, ASCII Character: 'l' */
0xF8, 0xF8, 0x00, 0x1F, 0x1F, 0x00,

/* Code: 0x6D, ASCII Character: 'm' */
0xC0, 0xC0, 0x40, 0x40, 0xC0, 0x80, 0x40, 0x40,
0xC0, 0x80, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x1F,
0x1F, 0x00, 0x00, 0x1F, 0x1F, 0x00,

/* Code: 0x6E, ASCII Character: 'n' */
0xC0, 0xC0, 0x80, 0x40, 0x40, 0xC0, 0x80, 0x00,
0x1F, 0x1F, 0x00, 0x00, 0x00, 0x1F, 0x1F, 0x00,

/* Code: 0x6F, ASCII Character: 'o' */
0x80, 0xC0, 0x40, 0x40, 0x40, 0xC0, 0x80, 0x00,
0x0F, 0x1F, 0x10, 0x10, 0x10, 0x1F, 0x0F, 0x00,

/* Code: 0x70, ASCII Character: 'p' */
0xC0, 0xC0, 0x80, 0x40, 0x40, 0xC0, 0x80, 0x00,
0xFF, 0xFF, 0x10, 0x10, 0x10, 0x1F, 0x0F, 0x00,

/* Code: 0x71, ASCII Character: 'q' */
0x80, 0xC0, 0x40, 0x40, 0x40, 0xC0, 0xC0, 0x00,
0x0F, 0x1F, 0x10, 0x10, 0x08, 0xFF, 0xFF, 0x00,

/* Code: 0x72, ASCII Character: 'r' */
0xC0, 0xC0, 0x80, 0xC0, 0xC0, 0x00, 0x1F, 0x1F,
0x00, 0x00, 0x00, 0x00,

/* Code: 0x73, ASCII Character: 's' */
0x80, 0xC0, 0x40, 0x40, 0x40, 0x80, 0x00, 0x09,
0x13, 0x13, 0x16, 0x1E, 0x0C, 0x00,

/* Code: 0x74, ASCII Character: 't' */
0x40, 0xF0, 0xF0, 0x40, 0x40, 0x00, 0x00, 0x0F,
0x1F, 0x10, 0x10, 0x00,

/* Code: 0x75, ASCII Character: 'u' */
0xC0, 0xC0, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0x00,
0x0F, 0x1F, 0x10, 0x10, 0x08, 0x1F, 0x1F, 0x00,

/* Code: 0x76, ASCII Character: 'v' */
0x00, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0xC0, 0xC0,
0x00, 0x00, 0x01, 0x07, 0x1E, 0x18, 0x1E, 0x07,
0x01, 0x00,

/* Code: 0x77, ASCII Character: 'w' */
0xC0, 0xC0, 0x00, 0x00, 0xC0, 0xC0, 0x00, 0x00,
0xC0, 0xC0, 0x00, 0x00, 0x07, 0x1F, 0x1C, 0x03,
0x03, 0x1C, 0x1F, 0x07, 0x00, 0x00,

/* Code: 0x78, ASCII Character: 'x' */
0x00, 0xC0, 0xC0, 0x00, 0x00, 0xC0, 0xC0, 0x00,
0x00, 0x18, 0x1D, 0x07, 0x07, 0x1D, 0x18, 0x00,

/* Code: 0x79, ASCII Character: 'y' */
0x00, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0xC0, 0xC0,
0x00, 0x00, 0x01, 0x07, 0xDE, 0xF8, 0x3E, 0x07,
0x01, 0x00,

/* Code: 0x7A, ASCII Character: 'z' */
0x40, 0x40, 0x40, 0x40, 0xC0, 0xC0, 0x00, 0x18,
0x1C, 0x16, 0x13, 0x11, 0x10, 0x00,

/* Code: 0x7B, ASCII Character: '{' */
0x00, 0x00, 0xF0, 0xF8, 0x08, 0x08, 0x00, 0x01,
0x01, 0x3F, 0x7E, 0x40, 0x40, 0x00,

/* Code: 0x7C, ASCII Character: '|' */
0x00, 0x00, 0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00,
0x00, 0x7F, 0x7F, 0x00, 0x00, 0x00,

/* Code: 0x7D, ASCII Character: '}' */
0x08, 0x08, 0xF8, 0xF0, 0x00, 0x00, 0x00, 0x40,
0x40, 0x7E, 0x3F, 0x01, 0x01, 0x00,

/* Code: 0x7E, ASCII Character: '~' */
0x00, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00,
0x00, 0x80, 0x00, 0x07, 0x01, 0x01, 0x01, 0x03,
0x07, 0x06, 0x06, 0x06, 0x03, 0x00,

/* Code: 0x7F, ASCII Character: '' */
0x00, 0xFC, 0xFC, 0x04, 0x04, 0x04, 0xFC, 0xFC,
0x00, 0x00, 0x1F, 0x1F, 0x10, 0x10, 0x10, 0x1F,
0x1F, 0x00,

/* Code: 0x80, ASCII Character: 'Ђ' */
0x10, 0x10, 0xF0, 0xF0, 0x90, 0x90, 0x90, 0x80,
0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 0x00, 0x10,
0x10, 0x1F, 0x0F, 0x00,

/* Code: 0x81, ASCII Character: 'Ѓ' */
0xF0, 0xF0, 0x10, 0x14, 0x16, 0x12, 0x00, 0x1F,
0x1F, 0x00, 0x00, 0x00, 0x00, 0x00,

/* Code: 0x82, ASCII Character: '‚' */
0x00, 0x00, 0x00, 0x00, 0x40, 0x78, 0x38, 0x00,

/* Code: 0x83, ASCII Character: 'ѓ' */
0xC0, 0xD0, 0x58, 0x48, 0x40, 0x00, 0x1F, 0x1F,
0x00, 0x00, 0x00, 0x00,

/* Code: 0x84, ASCII Character: '„' */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x78,
0x38, 0x40, 0x78, 0x38,

/* Code: 0x85, ASCII Character: '…' */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18,
0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x18, 0x18,
0x00, 0x00,

/* Code: 0x86, ASCII Character: '†' */
0x00, 0x20, 0x20, 0xF8, 0xF8, 0x20, 0x20, 0x00,
0x00, 0x00, 0x00, 0x0F, 0x0F, 0x00, 0x00, 0x00,

/* Code: 0x87, ASCII Character: '‡' */
0x00, 0x20, 0x20, 0xF8, 0xF8, 0x20, 0x20, 0x00,
0x00, 0x02, 0x02, 0x0F, 0x0F, 0x02, 0x02, 0x00,

/* Code: 0x88, ASCII Character: '€' */
0x80, 0xC0, 0xE0, 0xB0, 0x90, 0x90, 0x90, 0x20,
0x02, 0x07, 0x0F, 0x1A, 0x12, 0x12, 0x12, 0x08,

/* Code: 0x89, ASCII Character: '‰' */
0xE0, 0xF0, 0x10, 0x10, 0xF0, 0xE0, 0x80, 0x40,
0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x09,
0x05, 0x03, 0x0E, 0x1F, 0x11, 0x11, 0x1F, 0x0E,
0x00, 0x0E, 0x1F, 0x11, 0x11, 0x1F, 0x0E, 0x00,

/* Code: 0x8A, ASCII Character: 'Љ' */
0x00, 0x00, 0xF0, 0xF0, 0x10, 0x10, 0xF0, 0xF0,
0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x10, 0x18,
0x0F, 0x07, 0x00, 0x00, 0x1F, 0x1F, 0x10, 0x10,
0x10, 0x1F, 0x0F, 0x00,

/* Code: 0x8B, ASCII Character: '‹' */
0x00, 0x00, 0x80, 0xC0, 0x00, 0x00, 0x00, 0x03,
0x07, 0x0C, 0x00, 0x00,

/* Code: 0x8C, ASCII Character: 'Њ' */
0xF0, 0xF0, 0x80, 0x80, 0x80, 0x80, 0xF0, 0xF0,
0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x1F, 0x1F,
0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 0x10, 0x10,
0x10, 0x1F, 0x0F, 0x00,

/* Code: 0x8D, ASCII Character: 'Ќ' */
0xF0, 0xF0, 0x00, 0x84, 0xE6, 0x72, 0x10, 0x00,
0x1F, 0x1F, 0x01, 0x03, 0x0E, 0x1C, 0x10, 0x00,

/* Code: 0x8E, ASCII Character: 'Ћ' */
0x10, 0x10, 0x10, 0xF0, 0xF0, 0x90, 0x90, 0x90,
0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F,
0x00, 0x00, 0x00, 0x1F, 0x1F, 0x00,

/* Code: 0x8F, ASCII Character: 'Џ' */
0xF0, 0xF0, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0,
0x00, 0x1F, 0x1F, 0x10, 0x70, 0x70, 0x10, 0x1F,
0x1F, 0x00,

/* Code: 0x90, ASCII Character: 'ђ' */
0x10, 0xF8, 0xF8, 0x90, 0x50, 0x40, 0xC0, 0x80,
0x00, 0x1F, 0x1F, 0x80, 0x80, 0xC0, 0x7F, 0x3F,

/* Code: 0x91, ASCII Character: '‘' */
0x38, 0x78, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,

/* Code: 0x92, ASCII Character: '’' */
0x40, 0x78, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00,

/* Code: 0x93, ASCII Character: '“' */
0x38, 0x78, 0x40, 0x38, 0x78, 0x40, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00,

/* Code: 0x94, ASCII Character: '”' */
0x40, 0x78, 0x38, 0x40, 0x78, 0x38, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00,

/* Code: 0x95, ASCII Character: '•' */
0x00, 0x80, 0xC0, 0xC0, 0xC0, 0xC0, 0x80, 0x00,
0x00, 0x07, 0x0F, 0x0F, 0x0F, 0x0F, 0x07, 0x00,

/* Code: 0x96, ASCII Character: '–' */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,

/* Code: 0x97, ASCII Character: '—' */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01,
0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,

/* Code: 0x98, ASCII Character: '' */
0x04, 0x06, 0x06, 0x06, 0x06, 0x02, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00,

/* Code: 0x99, ASCII Character: '™' */
0x10, 0xF0, 0x10, 0x00, 0xF0, 0x10, 0x60, 0x60,
0x10, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

/* Code: 0x9A, ASCII Character: 'љ' */
0x00, 0x00, 0xC0, 0xC0, 0x40, 0x40, 0xC0, 0xC0,
0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x18, 0x0F,
0x07, 0x00, 0x00, 0x1F, 0x1F, 0x11, 0x11, 0x1F,
0x0E, 0x00,

/* Code: 0x9B, ASCII Character: '›' */
0x00, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x0C,
0x07, 0x03, 0x00, 0x00,

/* Code: 0x9C, ASCII Character: 'њ' */
0xC0, 0xC0, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0x00,
0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 0x01, 0x01,
0x01, 0x1F, 0x1F, 0x11, 0x11, 0x1F, 0x0E, 0x00,

/* Code: 0x9D, ASCII Character: 'ќ' */
0xC0, 0xC0, 0x10, 0x18, 0x88, 0xC0, 0x40, 0x00,
0x1F, 0x1F, 0x02, 0x02, 0x0F, 0x1D, 0x10, 0x00,

/* Code: 0x9E, ASCII Character: 'ћ' */
0x10, 0xF8, 0xF8, 0x90, 0x50, 0x40, 0xC0, 0x80,
0x00, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x1F, 0x1F,

/* Code: 0x9F, ASCII Character: 'џ' */
0xC0, 0xC0, 0x00, 0x00, 0xC0, 0xC0, 0x00, 0x1F,
0x1F, 0x70, 0x70, 0x1F, 0x1F, 0x00,

/* Code: 0xA0, ASCII Character: ' ' */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

/* Code: 0xA1, ASCII Character: 'Ў' */
0x30, 0xF3, 0xC4, 0x04, 0x04, 0xC4, 0xF3, 0x30,
0x00, 0x00, 0x10, 0x11, 0x1F, 0x0F, 0x03, 0x00,
0x00, 0x00,

/* Code: 0xA2, ASCII Character: 'ў' */
0x00, 0xC0, 0xC8, 0x10, 0x10, 0x10, 0xC8, 0xC0,
0x00, 0x00, 0x01, 0x07, 0xDE, 0xF8, 0x3E, 0x07,
0x01, 0x00,

/* Code: 0xA3, ASCII Character: 'Ј' */
0x00, 0x10, 0x10, 0xF0, 0xF0, 0x00, 0x10, 0x10,
0x10, 0x1F, 0x0F, 0x00,

/* Code: 0xA4, ASCII Character: '¤' */
0x20, 0xC0, 0x40, 0x40, 0x40, 0xC0, 0x20, 0x00,
0x08, 0x07, 0x04, 0x04, 0x04, 0x07, 0x08, 0x00,

/* Code: 0xA5, ASCII Character: 'Ґ' */
0xF0, 0xF0, 0x10, 0x10, 0x1E, 0x1E, 0x00, 0x1F,
0x1F, 0x00, 0x00, 0x00, 0x00, 0x00,

/* Code: 0xA6, ASCII Character: '¦' */
0x00, 0x00, 0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00,
0x00, 0x7C, 0x7C, 0x00, 0x00, 0x00,

/* Code: 0xA7, ASCII Character: '§' */
0x60, 0xF0, 0x90, 0x90, 0x90, 0x90, 0x20, 0x00,
0x27, 0x4F, 0x48, 0x48, 0x48, 0x7F, 0x37, 0x00,

/* Code: 0xA8, ASCII Character: 'Ё' */
0xF0, 0xF6, 0x16, 0x10, 0x16, 0x16, 0x00, 0x1F,
0x1F, 0x11, 0x11, 0x11, 0x10, 0x00,

/* Code: 0xA9, ASCII Character: '©' */
0x80, 0x40, 0x20, 0x10, 0x90, 0x90, 0x90, 0x90,
0x20, 0x40, 0x80, 0x00, 0x0F, 0x10, 0x20, 0x47,
0x4F, 0x48, 0x48, 0x48, 0x20, 0x10, 0x0F, 0x00,

/* Code: 0xAA, ASCII Character: 'Є' */
0xE0, 0xF0, 0x10, 0x10, 0x10, 0x10, 0x60, 0x00,
0x0F, 0x1F, 0x11, 0x11, 0x11, 0x10, 0x0C, 0x00,

/* Code: 0xAB, ASCII Character: '«' */
0x00, 0x00, 0x80, 0xC0, 0x00, 0x00, 0x80, 0xC0,
0x00, 0x00, 0x03, 0x07, 0x0C, 0x00, 0x03, 0x07,
0x0C, 0x00,

/* Code: 0xAC, ASCII Character: '¬' */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01,
0x01, 0x01, 0x01, 0x1F, 0x00, 0x00,

/* Code: 0xAD, ASCII Character: '­' */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01,
0x01, 0x01, 0x01, 0x00,

/* Code: 0xAE, ASCII Character: '®' */
0x80, 0x40, 0x20, 0x90, 0x90, 0x90, 0x90, 0x10,
0x20, 0x40, 0x80, 0x00, 0x0F, 0x10, 0x20, 0x4F,
0x4F, 0x42, 0x47, 0x4D, 0x28, 0x10, 0x0F, 0x00,

/* Code: 0xAF, ASCII Character: 'Ї' */
0x06, 0x16, 0xF0, 0xF0, 0x16, 0x06, 0x00, 0x10,
0x1F, 0x1F, 0x10, 0x00,

/* Code: 0xB0, ASCII Character: '°' */
0x00, 0xE0, 0x10, 0x10, 0x10, 0xE0, 0x00, 0x00,
0x00, 0x01, 0x01, 0x01, 0x00, 0x00,

/* Code: 0xB1, ASCII Character: '±' */
0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x11, 0x11,
0x1F, 0x11, 0x11, 0x11, 0x00, 0x00,

/* Code: 0xB2, ASCII Character: 'І' */
0x10, 0xF0, 0xF0, 0x10, 0x00, 0x10, 0x1F, 0x1F,
0x10, 0x00,

/* Code: 0xB3, ASCII Character: 'і' */
0xD8, 0xD8, 0x00, 0x1F, 0x1F, 0x00,

/* Code: 0xB4, ASCII Character: 'ґ' */
0xC0, 0xC0, 0x40, 0x70, 0x70, 0x00, 0x1F, 0x1F,
0x00, 0x00, 0x00, 0x00,

/* Code: 0xB5, ASCII Character: 'µ' */
0xC0, 0xC0, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0x00,
0xFF, 0xFF, 0x10, 0x10, 0x08, 0x1F, 0x1F, 0x00,

/* Code: 0xB6, ASCII Character: '¶' */
0xE0, 0xF0, 0xF0, 0xF0, 0xF0, 0x10, 0xF0, 0x00,
0x01, 0x03, 0x03, 0x03, 0x7F, 0x00, 0x7F, 0x00,

/* Code: 0xB7, ASCII Character: '·' */
0x00, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00,

/* Code: 0xB8, ASCII Character: 'ё' */
0x80, 0xD8, 0x58, 0x40, 0x58, 0xD8, 0x80, 0x00,
0x0F, 0x1F, 0x12, 0x12, 0x12, 0x13, 0x0B, 0x00,

/* Code: 0xB9, ASCII Character: '№' */
0xF0, 0x30, 0xF0, 0xC0, 0x00, 0x00, 0xF0, 0x00,
0x00, 0xE0, 0xF0, 0x10, 0x10, 0xF0, 0xE0, 0x00,
0x1F, 0x00, 0x00, 0x03, 0x0F, 0x1C, 0x1F, 0x00,
0x00, 0x01, 0x0B, 0x0A, 0x0A, 0x0B, 0x01, 0x00,

/* Code: 0xBA, ASCII Character: 'є' */
0x80, 0xC0, 0x40, 0x40, 0x40, 0x80, 0x00, 0x0F,
0x1F, 0x12, 0x12, 0x12, 0x08, 0x00,

/* Code: 0xBB, ASCII Character: '»' */
0x00, 0xC0, 0x80, 0x00, 0x00, 0xC0, 0x80, 0x00,
0x00, 0x00, 0x0C, 0x07, 0x03, 0x00, 0x0C, 0x07,
0x03, 0x00,

/* Code: 0xBC, ASCII Character: 'ј' */
0x40, 0xD8, 0xD8, 0x00, 0x80, 0xFF, 0x7F, 0x00,

/* Code: 0xBD, ASCII Character: 'Ѕ' */
0xE0, 0xF0, 0x10, 0x10, 0x10, 0x10, 0x60, 0x00,
0x0C, 0x11, 0x11, 0x11, 0x11, 0x1F, 0x0E, 0x00,

/* Code: 0xBE, ASCII Character: 'ѕ' */
0x80, 0xC0, 0x40, 0x40, 0x40, 0x80, 0x00, 0x09,
0x13, 0x13, 0x16, 0x1E, 0x0C, 0x00,

/* Code: 0xBF, ASCII Character: 'ї' */
0x18, 0x18, 0xC0, 0xC0, 0x18, 0x18, 0x00, 0x00,
0x1F, 0x1F, 0x00, 0x00,

/* Code: 0xC0, ASCII Character: 'А' */
0x00, 0x00, 0xC0, 0xF0, 0x30, 0xF0, 0xC0, 0x00,
0x00, 0x00, 0x18, 0x1F, 0x07, 0x02, 0x02, 0x02,
0x07, 0x1F, 0x18, 0x00,

/* Code: 0xC1, ASCII Character: 'Б' */
0xF0, 0xF0, 0x90, 0x90, 0x90, 0x90, 0x00, 0x00,
0x1F, 0x1F, 0x10, 0x10, 0x10, 0x1F, 0x0F, 0x00,

/* Code: 0xC2, ASCII Character: 'В' */
0xF0, 0xF0, 0x10, 0x10, 0x10, 0xF0, 0xE0, 0x00,
0x1F, 0x1F, 0x11, 0x11, 0x11, 0x1F, 0x0E, 0x00,

/* Code: 0xC3, ASCII Character: 'Г' */
0xF0, 0xF0, 0x10, 0x10, 0x10, 0x10, 0x00, 0x1F,
0x1F, 0x00, 0x00, 0x00, 0x00, 0x00,

/* Code: 0xC4, ASCII Character: 'Д' */
0x00, 0x00, 0xF0, 0xF0, 0x10, 0x10, 0xF0, 0xF0,
0x00, 0x00, 0x70, 0x7C, 0x1F, 0x13, 0x10, 0x10,
0x1F, 0x7F, 0x70, 0x00,

/* Code: 0xC5, ASCII Character: 'Е' */
0xF0, 0xF0, 0x10, 0x10, 0x10, 0x10, 0x00, 0x1F,
0x1F, 0x11, 0x11, 0x11, 0x10, 0x00,

/* Code: 0xC6, ASCII Character: 'Ж' */
0x10, 0x30, 0xE0, 0xC0, 0x00, 0xF0, 0xF0, 0x00,
0xC0, 0xE0, 0x30, 0x10, 0x00, 0x10, 0x1C, 0x0F,
0x03, 0x01, 0x1F, 0x1F, 0x01, 0x03, 0x0F, 0x1C,
0x10, 0x00,

/* Code: 0xC7, ASCII Character: 'З' */
0x60, 0x10, 0x10, 0x10, 0x10, 0xF0, 0xE0, 0x00,
0x0C, 0x10, 0x11, 0x11, 0x11, 0x1F, 0x0E, 0x00,

/* Code: 0xC8, ASCII Character: 'И' */
0xF0, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0xF0, 0x00,
0x1F, 0x0E, 0x07, 0x03, 0x01, 0x00, 0x1F, 0x00,

/* Code: 0xC9, ASCII Character: 'Й' */
0xF0, 0x03, 0x04, 0x84, 0xC4, 0xE3, 0xF0, 0x00,
0x1F, 0x0E, 0x07, 0x03, 0x01, 0x00, 0x1F, 0x00,

/* Code: 0xCA, ASCII Character: 'К' */
0xF0, 0xF0, 0x00, 0x80, 0xE0, 0x70, 0x10, 0x00,
0x1F, 0x1F, 0x01, 0x03, 0x0E, 0x1C, 0x10, 0x00,

/* Code: 0xCB, ASCII Character: 'Л' */
0x00, 0x00, 0xF0, 0xF0, 0x10, 0x10, 0x10, 0xF0,
0xF0, 0x00, 0x10, 0x18, 0x0F, 0x07, 0x00, 0x00,
0x00, 0x1F, 0x1F, 0x00,

/* Code: 0xCC, ASCII Character: 'М' */
0xF0, 0x30, 0xF0, 0xC0, 0x00, 0x00, 0xC0, 0x30,
0xF0, 0xF0, 0x00, 0x1F, 0x00, 0x00, 0x03, 0x0F,
0x03, 0x00, 0x00, 0x1F, 0x1F, 0x00,

/* Code: 0xCD, ASCII Character: 'Н' */
0xF0, 0xF0, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0,
0x00, 0x1F, 0x1F, 0x01, 0x01, 0x01, 0x01, 0x1F,
0x1F, 0x00,

/* Code: 0xCE, ASCII Character: 'О' */
0xE0, 0xF0, 0x10, 0x10, 0x10, 0x10, 0xF0, 0xE0,
0x00, 0x0F, 0x1F, 0x10, 0x10, 0x10, 0x10, 0x1F,
0x0F, 0x00,

/* Code: 0xCF, ASCII Character: 'П' */
0xF0, 0xF0, 0x10, 0x10, 0x10, 0x10, 0x10, 0xF0,
0xF0, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00,
0x00, 0x1F, 0x1F, 0x00,

/* Code: 0xD0, ASCII Character: 'Р' */
0xF0, 0xF0, 0x10, 0x10, 0x10, 0xF0, 0xE0, 0x00,
0x1F, 0x1F, 0x02, 0x02, 0x02, 0x03, 0x01, 0x00,

/* Code: 0xD1, ASCII Character: 'С' */
0xE0, 0xF0, 0x10, 0x10, 0x10, 0x10, 0x60, 0x00,
0x0F, 0x1F, 0x10, 0x10, 0x10, 0x10, 0x0C, 0x00,

/* Code: 0xD2, ASCII Character: 'Т' */
0x10, 0x10, 0xF0, 0xF0, 0x10, 0x10, 0x00, 0x00,
0x00, 0x1F, 0x1F, 0x00, 0x00, 0x00,

/* Code: 0xD3, ASCII Character: 'У' */
0x30, 0xF0, 0xC0, 0x00, 0x00, 0xC0, 0xF0, 0x30,
0x00, 0x00, 0x10, 0x11, 0x1F, 0x0F, 0x03, 0x00,
0x00, 0x00,

/* Code: 0xD4, ASCII Character: 'Ф' */
0xC0, 0xE0, 0x20, 0x20, 0xF0, 0xF0, 0x20, 0x20,
0xE0, 0xC0, 0x00, 0x07, 0x0F, 0x08, 0x08, 0x1F,
0x1F, 0x08, 0x08, 0x0F, 0x07, 0x00,

/* Code: 0xD5, ASCII Character: 'Х' */
0x00, 0x30, 0x70, 0xC0, 0x80, 0x80, 0xC0, 0x70,
0x30, 0x00, 0x00, 0x18, 0x1C, 0x06, 0x03, 0x03,
0x06, 0x1C, 0x18, 0x00,

/* Code: 0xD6, ASCII Character: 'Ц' */
0xF0, 0xF0, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0,
0x00, 0x00, 0x1F, 0x1F, 0x10, 0x10, 0x10, 0x10,
0x1F, 0x7F, 0x70, 0x00,

/* Code: 0xD7, ASCII Character: 'Ч' */
0xF0, 0xF0, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0,
0x00, 0x01, 0x03, 0x02, 0x02, 0x02, 0x02, 0x1F,
0x1F, 0x00,

/* Code: 0xD8, ASCII Character: 'Ш' */
0xF0, 0xF0, 0x00, 0x00, 0x00, 0xF0, 0xF0, 0x00,
0x00, 0x00, 0xF0, 0xF0, 0x00, 0x1F, 0x1F, 0x10,
0x10, 0x10, 0x1F, 0x1F, 0x10, 0x10, 0x10, 0x1F,
0x1F, 0x00,

/* Code: 0xD9, ASCII Character: 'Щ' */
0xF0, 0xF0, 0x00, 0x00, 0x00, 0xF0, 0xF0, 0x00,
0x00, 0x00, 0xF0, 0xF0, 0x00, 0x00, 0x1F, 0x1F,
0x10, 0x10, 0x10, 0x1F, 0x1F, 0x10, 0x10, 0x10,
0x1F, 0x7F, 0x70, 0x00,

/* Code: 0xDA, ASCII Character: 'Ъ' */
0x10, 0x10, 0xF0, 0xF0, 0x80, 0x80, 0x80, 0x80,
0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 0x10, 0x10,
0x10, 0x1F, 0x0F, 0x00,

/* Code: 0xDB, ASCII Character: 'Ы' */
0xF0, 0xF0, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00,
0xF0, 0xF0, 0x00, 0x1F, 0x1F, 0x10, 0x10, 0x10,
0x1F, 0x0F, 0x00, 0x1F, 0x1F, 0x00,

/* Code: 0xDC, ASCII Character: 'Ь' */
0xF0, 0xF0, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00,
0x1F, 0x1F, 0x10, 0x10, 0x10, 0x1F, 0x0F, 0x00,

/* Code: 0xDD, ASCII Character: 'Э' */
0x60, 0x10, 0x10, 0x10, 0x10, 0xF0, 0xE0, 0x00,
0x0C, 0x10, 0x11, 0x11, 0x11, 0x1F, 0x0F, 0x00,

/* Code: 0xDE, ASCII Character: 'Ю' */
0xF0, 0xF0, 0x00, 0x00, 0x00, 0xE0, 0xF0, 0x10,
0x10, 0x10, 0x10, 0xF0, 0xE0, 0x00, 0x1F, 0x1F,
0x01, 0x01, 0x01, 0x0F, 0x1F, 0x10, 0x10, 0x10,
0x10, 0x1F, 0x0F, 0x00,

/* Code: 0xDF, ASCII Character: 'Я' */
0x00, 0xE0, 0xF0, 0x10, 0x10, 0x10, 0xF0, 0xF0,
0x00, 0x10, 0x18, 0x0D, 0x07, 0x03, 0x01, 0x1F,
0x1F, 0x00,

/* Code: 0xE0, ASCII Character: 'а' */
0x00, 0x80, 0x40, 0x40, 0x40, 0xC0, 0x80, 0x00,
0x0C, 0x1E, 0x12, 0x12, 0x12, 0x1F, 0x1F, 0x00,

/* Code: 0xE1, ASCII Character: 'б' */
0xE0, 0xF0, 0x58, 0x48, 0x48, 0xC8, 0x88, 0x00,
0x0F, 0x1F, 0x10, 0x10, 0x10, 0x1F, 0x0F, 0x00,

/* Code: 0xE2, ASCII Character: 'в' */
0xC0, 0xC0, 0x40, 0x40, 0x40, 0xC0, 0x80, 0x00,
0x1F, 0x1F, 0x12, 0x12, 0x12, 0x1F, 0x0D, 0x00,

/* Code: 0xE3, ASCII Character: 'г' */
0xC0, 0xC0, 0x40, 0x40, 0x40, 0x00, 0x1F, 0x1F,
0x00, 0x00, 0x00, 0x00,

/* Code: 0xE4, ASCII Character: 'д' */
0x00, 0x00, 0xC0, 0xC0, 0x40, 0xC0, 0xC0, 0x00,
0x00, 0x70, 0x7C, 0x1F, 0x13, 0x10, 0x1F, 0x7F,
0x70, 0x00,

/* Code: 0xE5, ASCII Character: 'е' */
0x80, 0xC0, 0x40, 0x40, 0x40, 0xC0, 0x80, 0x00,
0x0F, 0x1F, 0x12, 0x12, 0x12, 0x13, 0x0B, 0x00,

/* Code: 0xE6, ASCII Character: 'ж' */
0x40, 0xC0, 0x80, 0x00, 0x00, 0xC0, 0xC0, 0x00,
0x00, 0x80, 0xC0, 0x40, 0x00, 0x10, 0x18, 0x0D,
0x07, 0x02, 0x1F, 0x1F, 0x02, 0x07, 0x0D, 0x18,
0x10, 0x00,

/* Code: 0xE7, ASCII Character: 'з' */
0x80, 0x40, 0x40, 0x40, 0xC0, 0x80, 0x00, 0x08,
0x12, 0x12, 0x12, 0x1F, 0x0D, 0x00,

/* Code: 0xE8, ASCII Character: 'и' */
0xC0, 0x00, 0x00, 0x00, 0x80, 0xC0, 0x00, 0x1F,
0x0C, 0x06, 0x03, 0x01, 0x1F, 0x00,

/* Code: 0xE9, ASCII Character: 'й' */
0xC0, 0x08, 0x10, 0x10, 0x90, 0xC8, 0x00, 0x1F,
0x0C, 0x06, 0x03, 0x01, 0x1F, 0x00,

/* Code: 0xEA, ASCII Character: 'к' */
0xC0, 0xC0, 0x00, 0x00, 0x80, 0xC0, 0x40, 0x00,
0x1F, 0x1F, 0x02, 0x02, 0x0F, 0x1D, 0x10, 0x00,

/* Code: 0xEB, ASCII Character: 'л' */
0x00, 0x00, 0xC0, 0xC0, 0x40, 0x40, 0xC0, 0xC0,
0x00, 0x10, 0x18, 0x0F, 0x07, 0x00, 0x00, 0x1F,
0x1F, 0x00,

/* Code: 0xEC, ASCII Character: 'м' */
0xC0, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x80, 0xC0,
0xC0, 0x00, 0x1F, 0x1F, 0x01, 0x07, 0x0E, 0x07,
0x01, 0x1F, 0x1F, 0x00,

/* Code: 0xED, ASCII Character: 'н' */
0xC0, 0xC0, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0x00,
0x1F, 0x1F, 0x02, 0x02, 0x02, 0x1F, 0x1F, 0x00,

/* Code: 0xEE, ASCII Character: 'о' */
0x80, 0xC0, 0x40, 0x40, 0x40, 0xC0, 0x80, 0x00,
0x0F, 0x1F, 0x10, 0x10, 0x10, 0x1F, 0x0F, 0x00,

/* Code: 0xEF, ASCII Character: 'п' */
0xC0, 0xC0, 0x40, 0x40, 0x40, 0xC0, 0xC0, 0x00,
0x1F, 0x1F, 0x00, 0x00, 0x00, 0x1F, 0x1F, 0x00,

/* Code: 0xF0, ASCII Character: 'р' */
0xC0, 0xC0, 0x80, 0x40, 0x40, 0xC0, 0x80, 0x00,
0xFF, 0xFF, 0x10, 0x10, 0x10, 0x1F, 0x0F, 0x00,

/* Code: 0xF1, ASCII Character: 'с' */
0x80, 0xC0, 0x40, 0x40, 0x40, 0x80, 0x00, 0x0F,
0x1F, 0x10, 0x10, 0x10, 0x08, 0x00,

/* Code: 0xF2, ASCII Character: 'т' */
0x40, 0x40, 0xC0, 0xC0, 0x40, 0x40, 0x00, 0x00,
0x00, 0x1F, 0x1F, 0x00, 0x00, 0x00,

/* Code: 0xF3, ASCII Character: 'у' */
0x00, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0xC0, 0xC0,
0x00, 0x00, 0x01, 0x07, 0xDE, 0xF8, 0x3E, 0x07,
0x01, 0x00,

/* Code: 0xF4, ASCII Character: 'ф' */
0x80, 0xC0, 0x40, 0x40, 0xF8, 0xF8, 0x40, 0x40,
0xC0, 0x80, 0x00, 0x0F, 0x1F, 0x10, 0x10, 0xFF,
0xFF, 0x10, 0x10, 0x1F, 0x0F, 0x00,

/* Code: 0xF5, ASCII Character: 'х' */
0x00, 0xC0, 0xC0, 0x00, 0x00, 0xC0, 0xC0, 0x00,
0x00, 0x18, 0x1D, 0x07, 0x07, 0x1D, 0x18, 0x00,

/* Code: 0xF6, ASCII Character: 'ц' */
0xC0, 0xC0, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0x00,
0x00, 0x1F, 0x1F, 0x10, 0x10, 0x10, 0x1F, 0x7F,
0x70, 0x00,

/* Code: 0xF7, ASCII Character: 'ч' */
0xC0, 0xC0, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0x00,
0x03, 0x07, 0x04, 0x04, 0x04, 0x1F, 0x1F, 0x00,

/* Code: 0xF8, ASCII Character: 'ш' */
0xC0, 0xC0, 0x00, 0x00, 0xC0, 0xC0, 0x00, 0x00,
0xC0, 0xC0, 0x00, 0x1F, 0x1F, 0x10, 0x10, 0x1F,
0x1F, 0x10, 0x10, 0x1F, 0x1F, 0x00,

/* Code: 0xF9, ASCII Character: 'щ' */
0xC0, 0xC0, 0x00, 0x00, 0xC0, 0xC0, 0x00, 0x00,
0xC0, 0xC0, 0x00, 0x00, 0x1F, 0x1F, 0x10, 0x10,
0x1F, 0x1F, 0x10, 0x10, 0x1F, 0x7F, 0x70, 0x00,

/* Code: 0xFA, ASCII Character: 'ъ' */
0x40, 0x40, 0x40, 0xC0, 0xC0, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x1F, 0x11,
0x11, 0x1F, 0x0E, 0x00,

/* Code: 0xFB, ASCII Character: 'ы' */
0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0xC0, 0xC0, 0x00, 0x1F, 0x1F, 0x11, 0x11, 0x1F,
0x0E, 0x00, 0x00, 0x1F, 0x1F, 0x00,

/* Code: 0xFC, ASCII Character: 'ь' */
0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F,
0x1F, 0x11, 0x11, 0x1F, 0x0E, 0x00,

/* Code: 0xFD, ASCII Character: 'э' */
0x80, 0x40, 0x40, 0x40, 0xC0, 0x80, 0x00, 0x08,
0x12, 0x12, 0x12, 0x1F, 0x0F, 0x00,

/* Code: 0xFE, ASCII Character: 'ю' */
0xC0, 0xC0, 0x00, 0x00, 0x80, 0xC0, 0x40, 0x40,
0x40, 0xC0, 0x80, 0x00, 0x1F, 0x1F, 0x02, 0x02,
0x0F, 0x1F, 0x10, 0x10, 0x10, 0x1F, 0x0F, 0x00,

/* Code: 0xFF, ASCII Character: 'я' */
0x00, 0x80, 0xC0, 0x40, 0x40, 0xC0, 0xC0, 0x00,
0x10, 0x1B, 0x0F, 0x04, 0x04, 0x1F, 0x1F, 0x00,

};

unsigned char lcd_x=0,lcd_y=0;
int marker_pos=0;

//Конфигурация портов
void LCD_setup_io()
{
	LCD_RST_PORT&=~(LCD_RST_PIN);
	LCD_CE_PORT&=~(LCD_RST_PIN);
	LCD_DC_PORT&=~(LCD_RST_PIN);
	LCD_VDD_PORT&=~(LCD_VDD_PIN);

	LCD_RST_DDR|=(LCD_RST_PIN);
	LCD_CE_DDR|=(LCD_CE_PIN);
	LCD_DC_DDR|=(LCD_DC_PIN);
	LCD_VDD_DDR|=(LCD_VDD_PIN);

	LCD_SPI_DDR |= (LCD_MOSI_PIN | LCD_CS_PIN | LCD_SCK_PIN);      //Set control pins as outputs
	LCD_SPI_PORT &= ~(LCD_MOSI_PIN | LCD_CS_PIN | LCD_SCK_PIN);         //Set control pins low
	LCD_SPI_PORT &= ~LCD_CS_PIN;
	//Setup SPI

	SPCR = (1<< SPE) | (1<< MSTR)|(0<<SPR1)|(0<<SPR0);  //Start SPI as Master
}

//Возвращает байт из массива символов

unsigned char LCD_get_symbol_from_array_tahoma(unsigned int index_array)
{
	return pgm_read_byte(&tahoma_bold[index_array]);

}
unsigned char LCD_get_symbol_from_array_tahoma8(unsigned int index_array)
{
	return pgm_read_byte(&tahoma8_ui[index_array]);

}

//Вывод байта в порт
void LCD_SPI_out(unsigned char data,char cd)
{

	if (cd==1)
	{
		LCD_DC_PORT|=(LCD_DC_PIN);
	}
	else
	{
		LCD_DC_PORT&=~(LCD_DC_PIN);
	}
	//_delay_us(1);
	 cli();
	LCD_CE_PORT&=~(LCD_CE_PIN);
   // _delay_us(1);
	SPDR=data;
	while(!(SPSR & (1<< SPIF)));
	//_delay_us(1);
	LCD_CE_PORT|=(LCD_CE_PIN);

	lcd_x++;
	if(lcd_x>101)
	{
		lcd_x=0;
		lcd_y++;
		if(lcd_y>8) lcd_y=0;
	}
	sei();
}

/*Подача питания на дисплей*/
void LCD_on()
{
	LCD_RST_PORT&=~(LCD_RST_PIN);
	LCD_RST_DDR|=(LCD_RST_PIN);

	LCD_VDD_PORT&=~(LCD_VDD_PIN);
	LCD_VDD_DDR|=(LCD_VDD_PIN);

	LCD_CE_DDR|=(LCD_CE_PIN);
	LCD_DC_DDR|=(LCD_DC_PIN);

	_delay_ms(100);
	LCD_VDD_PORT|=(LCD_VDD_PIN);
	_delay_ms(100);
}

/*Сброс дисплея*/
void LCD_reset()
{
	LCD_DC_PORT|=(LCD_DC_PIN);
	_delay_us(1);
	LCD_CE_PORT|=(LCD_CE_PIN);
	_delay_us(1);
	LCD_RST_PORT&=~(LCD_RST_PIN);
	_delay_ms(1);
	LCD_RST_PORT|=(LCD_RST_PIN);
}

//Инициализация дисплея
void LCDInitC55()
{
	LCD_on();
	LCD_reset();
	_delay_ms(1);
	LCD_SPI_out(0x21,0);// PowerON, ExtCommandSet
	LCD_SPI_out(0x09,0);// Internal HV-gen x3
	LCD_SPI_out(0xC1,0);// Set Vop
	LCD_SPI_out(0x15,0);// Bias n=2    //15
	LCD_SPI_out(0x06,0);// Temperature coeff 2
	LCD_SPI_out(0x20,0);// StandartCommandSet
	LCD_SPI_out(0x0C,0);// normal mode, display non-inverted
	LCD_SPI_out(0x40,0);// Установка Х0
	LCD_SPI_out(0x80,0);//Установка Y0
	_delay_ms(1);
}

//Очистка памяти дисплея
void LCD_clear_RAM()
{
	for (int i = 0; i < (816+102) ; i++)
	{
		LCD_SPI_out(0x00,1);

	}
	LCD_set_XY(0,0);
}
void LCD_print_array_link(char *str)
{
	register char c;

	while ( (c = pgm_read_byte(str++)) )
	{
		LCD_print_symbol(c);
	}
}

void LCD_print_array(char str) //не работает
{
	register char c;

	while ( (c = str++))  {
		LCD_print_symbol(c);
	}
}

void LCD_print_symbol(unsigned char ch)
{
		unsigned char index_s=0;
		unsigned char weigh_sym=0;
		unsigned int start_adress_sym=0;

		index_s= ch-LCD_get_symbol_from_array_tahoma8(0);
		weigh_sym=LCD_get_symbol_from_array_tahoma8(index_s+2);

		start_adress_sym=LCD_get_symbol_from_array_tahoma8(1)+2;

		for (int i = 0; i < index_s ; i++)
		{
			start_adress_sym+=((LCD_get_symbol_from_array_tahoma8(i+2)));
		}


	for (int i = 0; i < weigh_sym ; i++)
	{

		unsigned char out;
		out=LCD_get_symbol_from_array_tahoma8(start_adress_sym+i);

		LCD_SPI_out(out,1);
	}


}

void LCD_set_XY(unsigned char x, unsigned char y)
{
	if (y>8)  y=8;
	if(x>101) x=101;


	unsigned char tmp_x=0b10000000;
	unsigned char tmp_y=0b01000000;
	tmp_x|=x;
	tmp_y|=y;

	lcd_x=x;
	lcd_y=y;

	LCD_SPI_out(tmp_x,0);
	LCD_SPI_out(tmp_y,0);
}
void LCD_set_rows_columns(unsigned char rows, unsigned char columns)
{
	if (rows>8)
	{
		rows=8;
	}
	if (columns>12)
	{
		columns=12;
	}


	LCD_set_XY(columns*8,rows);
}


void LCD_print_tahoma_bold(unsigned char ch,unsigned char ramka)
{
	unsigned char index_s=0;
	unsigned char weigh_sym=0;
	unsigned int start_adress_sym=0;

	index_s= ch-LCD_get_symbol_from_array_tahoma(0);

	weigh_sym=LCD_get_symbol_from_array_tahoma(index_s+2);



	//Сумма длин символов

	start_adress_sym=LCD_get_symbol_from_array_tahoma(1)+2;



	for (int i = 0; i < index_s ; i++)
	{
	  start_adress_sym+=((LCD_get_symbol_from_array_tahoma(i+2))*2);
	}





	for (int i = 0; i < weigh_sym ; i++)
	{

		unsigned char out;
		out=LCD_get_symbol_from_array_tahoma(start_adress_sym+i);
		if(ramka==1)
		{
			out|=(1<<1);
		}


		LCD_SPI_out(out,1);
	}

	lcd_x-=(weigh_sym+2);
	lcd_y++;

	LCD_set_XY(lcd_x,lcd_y);

	for (int i = 0; i < weigh_sym ; i++)
	{
		unsigned char out;
		out=LCD_get_symbol_from_array_tahoma(start_adress_sym+weigh_sym+i);

		if(ramka==1)
		{
			out|=(1<<7);
		}

		LCD_SPI_out(out,1);
	}
	lcd_x-=2;
	lcd_y--;
	LCD_set_XY(lcd_x,lcd_y);

}
void LCD_print_array_tahoma_link(char *str,unsigned char ramka)
{
	register char c;

	while ( (c = pgm_read_byte(str++)) )
	{
		LCD_print_tahoma_bold(c,ramka);
	}
}

void LCD_draw_menu()
{
	Menu_Item_t* tempMenu1;
	tempMenu1= Menu_GetCurrentMenu();

	//--------------------------------------------------

	int i=0;
	int h=0;
	char rows=0;

	tempMenu1=(Menu_Item_t *)pgm_read_word(&tempMenu1->Next);
	while(!((tempMenu1 == &NULL_MENU) || (tempMenu1 == NULL)))
	{
		tempMenu1=(Menu_Item_t *)pgm_read_word(&tempMenu1->Next);
		i++;
	}


	tempMenu1= Menu_GetCurrentMenu();
	tempMenu1=(Menu_Item_t *)pgm_read_word(&tempMenu1->Previous);
	while(!((tempMenu1 == &NULL_MENU) || (tempMenu1 == NULL)))
	{
		tempMenu1=(Menu_Item_t *)pgm_read_word(&tempMenu1->Previous);
		h--;
	}


	//---------------------------------------------------------------


	LCD_clear_RAM();
	tempMenu1= Menu_GetCurrentMenu();
	LCD_set_XY(0,rows);

	int up=0;
	int down=0;
	up=0-marker_pos;
	down=6-marker_pos;

	if(down>i) down=i;


	while(up!=0)
	{
		LCD_set_XY(0,rows);
	//	LCD_print_array_link(menuText(up));
		rows++;
		up++;
	}


	LCD_set_XY(0,rows);
	tempMenu1= Menu_GetCurrentMenu();


//	LCD_print_array_tahoma_link(menuText(0),1);


	rows+=2;


	for(int k=1;k<=down;k++)
	{
		LCD_set_XY(0,rows);

	//	LCD_print_array_link(menuText(k));
		rows++;
	}
}

void LCD_increment_marker_pos()
{
	marker_pos++;
}
void LCD_deskrement_marker_pos()
{
	marker_pos--;
}
void LCD_set_marker_pos(int pos)
{
	marker_pos=pos;
}
int LCD_get_marker_pos()
{
	return marker_pos;
}
